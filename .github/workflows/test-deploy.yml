name: MyST GitHub Pages Deploy

on:
  workflow_dispatch:

env:
  BASE_URL: /${{ github.event.repository.name }}

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python and Jupyter
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .binder/requirements.txt

      - name: Install system dependencies from .binder/apt.txt
        run: |
          sudo apt-get update
          < .binder/apt.txt xargs sudo apt-get install -y

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install npm packages
        run: |
          npm install --force
          npm install -g mystmd

      - name: Install Typst
        run: |
          curl -L -o typst.tar.xz \
            https://github.com/typst/typst/releases/latest/download/typst-x86_64-unknown-linux-musl.tar.xz
          tar -xf typst.tar.xz
          sudo mv typst-x86_64-unknown-linux-musl/typst /usr/local/bin/
          typst --version

      - name: Check repository structure
        run: |
          ls -la
          echo "Checking for _components directory:"
          if [ -d "_components" ]; then
            echo "_components exists"
            ls -la _components/
          else
            echo "_components not found, creating it"
            mkdir -p _components
          fi
          echo "Checking for scripts directory:"
          if [ -d "scripts" ]; then
            echo "scripts exists"
            ls -la scripts/
          else
            echo "scripts not found, creating it"
            mkdir -p scripts
            echo "// Auto-size HTML components" > scripts/html-autosize.js
          fi

      - name: Run build-components script if available
        run: |
          if [ -f "build-components.mjs" ]; then
            node build-components.mjs
          else
            echo "build-components.mjs not found, skipping"
          fi

      - name: Prepare Directories
        run: mkdir -p exports

      # First build HTML to ensure all components are processed
      - name: Build HTML Assets
        run: myst build --execute --html -d 

      # Now build PDF with the components already processed
      - name: Build PDF Assets
        run: |
          # Print myst.yml content to debug
          cat myst.yml
          # Try with --file to explicitly target the files
          myst build --pdf --execute -d --file hyperparameter-optimization-whitepaper.md
          myst build --pdf --execute -d --file iceberg-prediction-whitepaper-v2.md
          ls -la exports/ || echo "No exports directory found"

      # Rebuild HTML with all formats to include everything
      - name: Rebuild HTML with all formats
        run: myst build --execute --html -d --md --site --all
        
      - name: Check build output
        run: |
          ls -la _build/html/ || echo "No _build/html directory found"
          ls -la exports/ || echo "No exports directory found"
          if [ -d "_components" ]; then
            echo "Copying _components directory to build output"
            mkdir -p _build/html/_components
            cp -R _components/* _build/html/_components/ || echo "No files in _components"
          fi

      - name: Ensure PDFs are in HTML output
        run: |
          mkdir -p _build/html/exports
          cp exports/*.pdf _build/html/exports/ || echo "No PDFs found to copy"
          
      - name: Copy custom CSS to build directory
        run: |
          if [ -f "custom.css" ]; then
            cp custom.css _build/html/
            echo "custom.css copied to build directory"
          else
            echo "custom.css not found - creating a simple placeholder"
            echo "/* Placeholder CSS */" > _build/html/custom.css
          fi
          
      - name: Copy project assets and necessary files
        run: |
          # Assets directory
          if [ -d "assets" ]; then
            mkdir -p _build/html/assets
            cp -R assets/* _build/html/assets/ || echo "No files in assets directory"
          else
            echo "assets directory not found, creating it"
            mkdir -p _build/html/assets
          fi
          
          # Scripts directory
          if [ -d "scripts" ]; then
            mkdir -p _build/html/scripts
            cp -R scripts/* _build/html/scripts/ || echo "No files in scripts directory"
          else
            mkdir -p _build/html/scripts
            echo "// Auto-size HTML components" > _build/html/scripts/html-autosize.js
          fi
          
          # Copy the include-html.mjs file to build directory
          if [ -f "include-html.mjs" ]; then
            cp include-html.mjs _build/html/
            echo "include-html.mjs copied to build directory"
          fi
          
      - name: Final check of build directory structure
        run: |
          echo "Final HTML build directory structure:"
          find _build/html -type f | sort

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _build/html

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          github_token: ${{ secrets.PAGES_TOKEN }}
