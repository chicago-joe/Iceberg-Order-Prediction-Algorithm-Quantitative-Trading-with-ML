#!/bin/bash

# Ensure the script is executable
chmod +x "${0}"

# Set paths
export PATH="${HOME}/.local/bin:${PATH}"

# Install system-level dependencies
apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    graphviz \
    cargo/stable \
    xclip \
    ack \
    ripgrep \
    alien \
    texinfo \
    apt-utils \
    pandoc \
    curl \
    && rm -rf /var/lib/apt/lists/*

# for pdf image exports
wget --output-document ~/.local/bin/magick.rpm https://imagemagick.org/archive/linux/CentOS/x86_64/ImageMagick-7.1.1-47.x86_64.rpm
wget --output-document ~/.local/bin/magick-libs.rpm https://imagemagick.org/archive/linux/CentOS/x86_64/ImageMagick-libs-7.1.1-47.x86_64.rpm

alien ~/.local/bin/magick.rpm && alien ~/.local/bin/magick-libs.rpm
rm -rf ~/.local/bin/*.rpm && dpkg -i ~/.local/bin/*.deb


# Install Typst via the official installer (avoids snapd issues)
curl -fsSL https://typst.community/typst-install/install.sh | sh && \
    echo 'export PATH="$HOME/.typst:$PATH"' >> /etc/profile && \
    echo 'export PATH="$HOME/.typst:$PATH"' >> ~/.bashrc

# Set environment variables
export PATH="${HOME}/.typst:${PATH}"
export PUPPETEER_EXECUTABLE_PATH="/usr/bin/chromium"

# Install Python packages
uv run python -m pip install --no-cache-dir -r ./requirements.txt
    #jupytext \
    #myst-parser \
    #myst-nb \
    #jupyter-book \
    #jupyterlab-myst \
    

cargo install --locked typst-cli gitui eza

cd ..
npm install --force

## Find and convert notebooks to MyST if needed
#find . -name "*.ipynb" -not -path "*/\.*" -exec jupytext --to myst {} \; || echo "No notebooks to convert"

## Initialize MyST environment (with error handling)
#myst init || echo "MyST initialization failed"

## Build JupyterLab (with error handling)
#jupyter lab build || echo "JupyterLab build failed"

echo "postBuild script completed"
